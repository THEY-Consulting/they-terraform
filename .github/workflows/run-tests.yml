on:
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review]

name: Run terraform test

permissions:
  id-token: write
  contents: read

# currently only one can run at a time
concurrency:
  group: test
  cancel-in-progress: false

jobs:
  deploy:
    name: Test
    runs-on: ubuntu-latest
    env:
      TF_IN_AUTOMATION: true
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set variables
        run: |
          TF_VERSION=$(grep -vP '^[\s]?#' .terraform-version)
          echo "TF_VERSION=$TF_VERSION" >> $GITHUB_ENV

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TF_VERSION }}

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ vars.DEPLOY_AWS_ROLE }}
          role-session-name: GitHubActionSession
          aws-region: eu-central-1

      - name: Test modules
        run: |
          cd aws
          cwd=$(pwd)
          dirs=$(find . -maxdepth 2 -name "tests" -o -name "*.tftest.hcl" | sed -r 's|/[^/]+$||' | sort -u)
          for d in $dirs; do
            cd $d
            echo "TERRAFORM TEST FOR $d"
            terraform init
            terraform test
            cd $cwd
          done
          cd ../azure
          cwd=$(pwd)
          dirs=$(find . -maxdepth 2 -name "tests" -o -name "*.tftest.hcl" | sed -r 's|/[^/]+$||' | sort -u)
          for d in $dirs; do
            cd $d
            echo "TERRAFORM TEST FOR $d"
            terraform init
            terraform test
            cd $cwd
          done

      - name: Test examples
        run: |
          cd examples
          cwd=$(pwd)
          dirs=$(find . -maxdepth 3 -name "tests" -o -name "*.tftest.hcl" | sed -r 's|/[^/]+$||' | sort -u)
          for d in $dirs; do
            cd $d
            echo "TERRAFORM TEST FOR $d"
            # Install dependencies
            if [ -f "yarn.lock" ]; then
              yarn install
            elif [ -f "package-lock.json" ]; then
              npm install
            fi
            terraform init
            terraform test
            cd $cwd
          done
